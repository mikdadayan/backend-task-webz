version: "3.8"
services:
  mongodb:
    container_name: mongo-server
    image: mongo:5.0.3
    restart: always
    env_file: .env
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_CONTAINER_PORT
    volumes:
      - mongodb_database:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fetch-posts-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      # , roles: [db_owner]
    # command: sh -c "mongo --eval 'use $MONGODB_DATABASE'; mongo --eval 'db.createUser({user:$MONGODB_USER, pwd:$MONGODB_PASSWORD, roles:[dbOwner]})';"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "'db.runCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 10s
      retries: 5
  fetch-posts-api:
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npm run dev
    container_name: fetch-posts-api
    restart: unless-stopped
    env_file: .env
    ports:
      - $NODE_LOCAL_PORT:$NODE_CONTAINER_PORT
    stdin_open: true
    tty: true
    networks:
      - fetch-posts-network
    volumes:
      - .:/src/app
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:$NODE_CONTAINER_PORT/ || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_database:

networks:
  fetch-posts-network:
    driver: bridge
